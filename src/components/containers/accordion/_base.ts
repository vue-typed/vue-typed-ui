/**
 * PLEASE DO NOT EDIT THIS FILE (automatically generated from ./schema/props.json)
 */
import {
    Prop,
    Virtual,
    Mixin
} from "vue-typed"
import * as Vue from "vue"
export abstract class _AccordionBase extends Virtual < Vue > () {

    /**
     * Only allow one section open at a time
     * 
     * @default true
     * @type {boolean}
     */
    @Prop({
        type: Boolean,
        default: true
    })
    exclusive: boolean

    /**
     * Event on title that will cause accordion to open
     * 
     * @default 'click'
     * @type {string}
     */
    @Prop({
        type: String,
        default: 'click'
    })
    on: string

    /**
     * Whether child content opacity should be animated (may cause performance issues with many child elements)
     * 
     * @default true
     * @type {boolean}
     */
    @Prop({
        type: Boolean,
        default: true
    })
    animateChildren: boolean

    /**
     * Duration in ms of opening animation
     * 
     * @default 500
     * @type {number}
     */
    @Prop({
        type: Number,
        default: 500
    })
    duration: number

    /**
     * Close open nested accordion content when an element closes
     * 
     * @default true
     * @type {boolean}
     */
    @Prop({
        type: Boolean,
        default: true
    })
    closeNested: boolean

    /**
     * Allow active sections to collapse
     * 
     * @default true
     * @type {boolean}
     */
    @Prop({
        type: Boolean,
        default: true
    })
    collapsible: boolean

}


export enum _AccordionEvents {
    /**
     * Callback before element opens
     */
    opening = "opening",

        /**
         * Callback after element is open
         */
        open = "open",

        /**
         * Callback before element closes
         */
        closing = "closing",

        /**
         * Callback after element is closed
         */
        close = "close",

        /**
         * Callback on element open or close
         */
        change = "change"
}