/**
 * PLEASE DO NOT EDIT THIS FILE (automatically generated from ./schema/props.json)
 */
import {
    Prop,
    Virtual,
    Mixin
} from "vue-typed"
import * as Vue from "vue"
export abstract class _TreeBase extends Virtual < Vue > () {

    /**
     * Data model to populate.
     * 
     * @type {any}
     */
    @Prop()
    model: any

    /**
     * A property name of data model represents content of tree view.
     * 
     * @type {string}
     */
    @Prop({
        type: String
    })
    content: string

    /**
     * Indicate that the content is in HTML format. If set true then `content` property will be ignored, you'll need to supply `htmlContent` property instead.
     * 
     * @type {boolean}
     */
    @Prop({
        type: Boolean
    })
    html: boolean

    /**
     * Html content that displayed on tree content area. You must set `html` property to `true` to use this property.
     * 
     * @type {string}
     */
    @Prop({
        type: String
    })
    htmlContent: string

    /**
     * A property name of data model represents children property. Children property must be in array type contains list of `model`.
     * 
     * @type {string}
     */
    @Prop({
        type: String
    })
    children: string

    /**
     * HTML parent tag name. Default is `ul`.
     * 
     * @default 'ul'
     * @type {string}
     */
    @Prop({
        type: String,
        default: 'ul'
    })
    parentTag: string

    /**
     * HTML child tag name. Default is `li`.
     * 
     * @default 'li'
     * @type {string}
     */
    @Prop({
        type: String,
        default: 'li'
    })
    childTag: string

}


export enum _TreeEvents {
    /**
     * Callback when node clicked
     */
    nodeClick = "node-click"
}